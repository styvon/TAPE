// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// getScore
List getScore(int n_nomissing, int q, arma::fvec& Y, arma::fmat& X, arma::sp_mat& sparsekin, const std::vector<arma::fmat>& densekin, const arma::fvec& W, arma::fvec tau, arma::fvec fixtau, bool is_AI, float tol_pcg, int maxiter_pcg, int nrun_trace, float cutoff_trace);
RcppExport SEXP _TAPE_getScore(SEXP n_nomissingSEXP, SEXP qSEXP, SEXP YSEXP, SEXP XSEXP, SEXP sparsekinSEXP, SEXP densekinSEXP, SEXP WSEXP, SEXP tauSEXP, SEXP fixtauSEXP, SEXP is_AISEXP, SEXP tol_pcgSEXP, SEXP maxiter_pcgSEXP, SEXP nrun_traceSEXP, SEXP cutoff_traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_nomissing(n_nomissingSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< const std::vector<arma::fmat>& >::type densekin(densekinSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type fixtau(fixtauSEXP);
    Rcpp::traits::input_parameter< bool >::type is_AI(is_AISEXP);
    Rcpp::traits::input_parameter< float >::type tol_pcg(tol_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter_pcg(maxiter_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type nrun_trace(nrun_traceSEXP);
    Rcpp::traits::input_parameter< float >::type cutoff_trace(cutoff_traceSEXP);
    rcpp_result_gen = Rcpp::wrap(getScore(n_nomissing, q, Y, X, sparsekin, densekin, W, tau, fixtau, is_AI, tol_pcg, maxiter_pcg, nrun_trace, cutoff_trace));
    return rcpp_result_gen;
END_RCPP
}
// getTau
List getTau(int n_nomissing, arma::sp_mat& sparsekin, StringVector kmatfile, arma::fvec tau, arma::fvec fixtau, arma::fvec& Y, arma::fvec& y, arma::fmat& X, arma::fvec alpha, arma::fvec W, int maxiter, float tol, float tol_pcg, int maxiter_pcg, int nrun_trace, float cutoff_trace, bool verbose, float tol_tau);
RcppExport SEXP _TAPE_getTau(SEXP n_nomissingSEXP, SEXP sparsekinSEXP, SEXP kmatfileSEXP, SEXP tauSEXP, SEXP fixtauSEXP, SEXP YSEXP, SEXP ySEXP, SEXP XSEXP, SEXP alphaSEXP, SEXP WSEXP, SEXP maxiterSEXP, SEXP tolSEXP, SEXP tol_pcgSEXP, SEXP maxiter_pcgSEXP, SEXP nrun_traceSEXP, SEXP cutoff_traceSEXP, SEXP verboseSEXP, SEXP tol_tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_nomissing(n_nomissingSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< StringVector >::type kmatfile(kmatfileSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type fixtau(fixtauSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type W(WSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< float >::type tol_pcg(tol_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter_pcg(maxiter_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type nrun_trace(nrun_traceSEXP);
    Rcpp::traits::input_parameter< float >::type cutoff_trace(cutoff_traceSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< float >::type tol_tau(tol_tauSEXP);
    rcpp_result_gen = Rcpp::wrap(getTau(n_nomissing, sparsekin, kmatfile, tau, fixtau, Y, y, X, alpha, W, maxiter, tol, tol_pcg, maxiter_pcg, nrun_trace, cutoff_trace, verbose, tol_tau));
    return rcpp_result_gen;
END_RCPP
}
// getTau_plink
List getTau_plink(int n_nomissing, arma::sp_mat& sparsekin, arma::fvec tau, arma::fvec fixtau, arma::fvec& Y, arma::fvec& y, arma::fmat& X, arma::fvec alpha, arma::fvec W, int maxiter, float tol, float tol_pcg, int maxiter_pcg, int nrun_trace, float cutoff_trace, bool verbose, bool loco, IntegerVector startid_chr_LOCO, IntegerVector endid_chr_LOCO, float tol_tau, float tol_coef);
RcppExport SEXP _TAPE_getTau_plink(SEXP n_nomissingSEXP, SEXP sparsekinSEXP, SEXP tauSEXP, SEXP fixtauSEXP, SEXP YSEXP, SEXP ySEXP, SEXP XSEXP, SEXP alphaSEXP, SEXP WSEXP, SEXP maxiterSEXP, SEXP tolSEXP, SEXP tol_pcgSEXP, SEXP maxiter_pcgSEXP, SEXP nrun_traceSEXP, SEXP cutoff_traceSEXP, SEXP verboseSEXP, SEXP locoSEXP, SEXP startid_chr_LOCOSEXP, SEXP endid_chr_LOCOSEXP, SEXP tol_tauSEXP, SEXP tol_coefSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_nomissing(n_nomissingSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type fixtau(fixtauSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type W(WSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< float >::type tol_pcg(tol_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter_pcg(maxiter_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type nrun_trace(nrun_traceSEXP);
    Rcpp::traits::input_parameter< float >::type cutoff_trace(cutoff_traceSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< bool >::type loco(locoSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type startid_chr_LOCO(startid_chr_LOCOSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type endid_chr_LOCO(endid_chr_LOCOSEXP);
    Rcpp::traits::input_parameter< float >::type tol_tau(tol_tauSEXP);
    Rcpp::traits::input_parameter< float >::type tol_coef(tol_coefSEXP);
    rcpp_result_gen = Rcpp::wrap(getTau_plink(n_nomissing, sparsekin, tau, fixtau, Y, y, X, alpha, W, maxiter, tol, tol_pcg, maxiter_pcg, nrun_trace, cutoff_trace, verbose, loco, startid_chr_LOCO, endid_chr_LOCO, tol_tau, tol_coef));
    return rcpp_result_gen;
END_RCPP
}
// getTau_plink_nok
List getTau_plink_nok(int n_nomissing, arma::fvec tau, arma::fvec fixtau, arma::fvec& Y, arma::fvec& y, arma::fmat& X, arma::fvec alpha, arma::fvec W, int maxiter, float tol, float tol_pcg, int maxiter_pcg, int nrun_trace, float cutoff_trace, bool verbose, float tol_tau, float tol_coef);
RcppExport SEXP _TAPE_getTau_plink_nok(SEXP n_nomissingSEXP, SEXP tauSEXP, SEXP fixtauSEXP, SEXP YSEXP, SEXP ySEXP, SEXP XSEXP, SEXP alphaSEXP, SEXP WSEXP, SEXP maxiterSEXP, SEXP tolSEXP, SEXP tol_pcgSEXP, SEXP maxiter_pcgSEXP, SEXP nrun_traceSEXP, SEXP cutoff_traceSEXP, SEXP verboseSEXP, SEXP tol_tauSEXP, SEXP tol_coefSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_nomissing(n_nomissingSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type fixtau(fixtauSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type W(WSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< float >::type tol_pcg(tol_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter_pcg(maxiter_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type nrun_trace(nrun_traceSEXP);
    Rcpp::traits::input_parameter< float >::type cutoff_trace(cutoff_traceSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< float >::type tol_tau(tol_tauSEXP);
    Rcpp::traits::input_parameter< float >::type tol_coef(tol_coefSEXP);
    rcpp_result_gen = Rcpp::wrap(getTau_plink_nok(n_nomissing, tau, fixtau, Y, y, X, alpha, W, maxiter, tol, tol_pcg, maxiter_pcg, nrun_trace, cutoff_trace, verbose, tol_tau, tol_coef));
    return rcpp_result_gen;
END_RCPP
}
// getTrace
arma::fvec getTrace(int n_nomissing, int q, arma::sp_mat& sparsekin, const std::vector<arma::fmat>& densekin, arma::fmat& Sigma, arma::fmat& Sigma_iX, arma::fmat& X, const arma::fvec& W_vec, arma::fmat& XSiX_inv, int nrun_trace, int maxiter_pcg, float tol_pcg, float cutoff_trace);
RcppExport SEXP _TAPE_getTrace(SEXP n_nomissingSEXP, SEXP qSEXP, SEXP sparsekinSEXP, SEXP densekinSEXP, SEXP SigmaSEXP, SEXP Sigma_iXSEXP, SEXP XSEXP, SEXP W_vecSEXP, SEXP XSiX_invSEXP, SEXP nrun_traceSEXP, SEXP maxiter_pcgSEXP, SEXP tol_pcgSEXP, SEXP cutoff_traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_nomissing(n_nomissingSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< const std::vector<arma::fmat>& >::type densekin(densekinSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Sigma_iX(Sigma_iXSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W_vec(W_vecSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type XSiX_inv(XSiX_invSEXP);
    Rcpp::traits::input_parameter< int >::type nrun_trace(nrun_traceSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter_pcg(maxiter_pcgSEXP);
    Rcpp::traits::input_parameter< float >::type tol_pcg(tol_pcgSEXP);
    Rcpp::traits::input_parameter< float >::type cutoff_trace(cutoff_traceSEXP);
    rcpp_result_gen = Rcpp::wrap(getTrace(n_nomissing, q, sparsekin, densekin, Sigma, Sigma_iX, X, W_vec, XSiX_inv, nrun_trace, maxiter_pcg, tol_pcg, cutoff_trace));
    return rcpp_result_gen;
END_RCPP
}
// glmmaiUpdate
List glmmaiUpdate(int n_nomissing, int q, arma::fvec Y, arma::fmat X, const arma::fvec& W, arma::sp_mat& sparsekin, const std::vector<arma::fmat>& densekin, arma::fvec tau, arma::fvec fixtau, float tol, float tol_pcg, int maxiter_pcg, int nrun_trace, float cutoff_trace);
RcppExport SEXP _TAPE_glmmaiUpdate(SEXP n_nomissingSEXP, SEXP qSEXP, SEXP YSEXP, SEXP XSEXP, SEXP WSEXP, SEXP sparsekinSEXP, SEXP densekinSEXP, SEXP tauSEXP, SEXP fixtauSEXP, SEXP tolSEXP, SEXP tol_pcgSEXP, SEXP maxiter_pcgSEXP, SEXP nrun_traceSEXP, SEXP cutoff_traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_nomissing(n_nomissingSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::fmat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< const std::vector<arma::fmat>& >::type densekin(densekinSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type fixtau(fixtauSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< float >::type tol_pcg(tol_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter_pcg(maxiter_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type nrun_trace(nrun_traceSEXP);
    Rcpp::traits::input_parameter< float >::type cutoff_trace(cutoff_traceSEXP);
    rcpp_result_gen = Rcpp::wrap(glmmaiUpdate(n_nomissing, q, Y, X, W, sparsekin, densekin, tau, fixtau, tol, tol_pcg, maxiter_pcg, nrun_trace, cutoff_trace));
    return rcpp_result_gen;
END_RCPP
}
// glmmaiUpdate_plink
List glmmaiUpdate_plink(int n_nomissing, int q, arma::fvec& Y, arma::fmat X, const arma::fvec& W, arma::sp_mat& sparsekin, arma::fvec tau, arma::fvec fixtau, float tol, float tol_pcg, int maxiter_pcg, int nrun_trace, float cutoff_trace);
RcppExport SEXP _TAPE_glmmaiUpdate_plink(SEXP n_nomissingSEXP, SEXP qSEXP, SEXP YSEXP, SEXP XSEXP, SEXP WSEXP, SEXP sparsekinSEXP, SEXP tauSEXP, SEXP fixtauSEXP, SEXP tolSEXP, SEXP tol_pcgSEXP, SEXP maxiter_pcgSEXP, SEXP nrun_traceSEXP, SEXP cutoff_traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_nomissing(n_nomissingSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::fmat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type fixtau(fixtauSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< float >::type tol_pcg(tol_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter_pcg(maxiter_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type nrun_trace(nrun_traceSEXP);
    Rcpp::traits::input_parameter< float >::type cutoff_trace(cutoff_traceSEXP);
    rcpp_result_gen = Rcpp::wrap(glmmaiUpdate_plink(n_nomissing, q, Y, X, W, sparsekin, tau, fixtau, tol, tol_pcg, maxiter_pcg, nrun_trace, cutoff_trace));
    return rcpp_result_gen;
END_RCPP
}
// glmmaiUpdate_plink_nok
List glmmaiUpdate_plink_nok(int n_nomissing, int q, arma::fvec& Y, arma::fmat X, const arma::fvec& W, arma::fvec tau, arma::fvec fixtau, float tol, float tol_pcg, int maxiter_pcg, int nrun_trace, float cutoff_trace);
RcppExport SEXP _TAPE_glmmaiUpdate_plink_nok(SEXP n_nomissingSEXP, SEXP qSEXP, SEXP YSEXP, SEXP XSEXP, SEXP WSEXP, SEXP tauSEXP, SEXP fixtauSEXP, SEXP tolSEXP, SEXP tol_pcgSEXP, SEXP maxiter_pcgSEXP, SEXP nrun_traceSEXP, SEXP cutoff_traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_nomissing(n_nomissingSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::fmat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type fixtau(fixtauSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< float >::type tol_pcg(tol_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter_pcg(maxiter_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type nrun_trace(nrun_traceSEXP);
    Rcpp::traits::input_parameter< float >::type cutoff_trace(cutoff_traceSEXP);
    rcpp_result_gen = Rcpp::wrap(glmmaiUpdate_plink_nok(n_nomissing, q, Y, X, W, tau, fixtau, tol, tol_pcg, maxiter_pcg, nrun_trace, cutoff_trace));
    return rcpp_result_gen;
END_RCPP
}
// glmmaiUpdate_plink_LOCO
List glmmaiUpdate_plink_LOCO(int n_nomissing, int q, arma::fvec& Y, arma::fmat X, const arma::fvec& W, arma::sp_mat& sparsekin, arma::fvec tau, arma::fvec fixtau, float tol, float tol_pcg, int maxiter_pcg, int nrun_trace, float cutoff_trace);
RcppExport SEXP _TAPE_glmmaiUpdate_plink_LOCO(SEXP n_nomissingSEXP, SEXP qSEXP, SEXP YSEXP, SEXP XSEXP, SEXP WSEXP, SEXP sparsekinSEXP, SEXP tauSEXP, SEXP fixtauSEXP, SEXP tolSEXP, SEXP tol_pcgSEXP, SEXP maxiter_pcgSEXP, SEXP nrun_traceSEXP, SEXP cutoff_traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_nomissing(n_nomissingSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::fmat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type fixtau(fixtauSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< float >::type tol_pcg(tol_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter_pcg(maxiter_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type nrun_trace(nrun_traceSEXP);
    Rcpp::traits::input_parameter< float >::type cutoff_trace(cutoff_traceSEXP);
    rcpp_result_gen = Rcpp::wrap(glmmaiUpdate_plink_LOCO(n_nomissing, q, Y, X, W, sparsekin, tau, fixtau, tol, tol_pcg, maxiter_pcg, nrun_trace, cutoff_trace));
    return rcpp_result_gen;
END_RCPP
}
// setgeno
int setgeno(std::string genofile, std::vector<int>& subSampleInGeno, float memoryChunk, bool isDiagofKinSetAsOne);
RcppExport SEXP _TAPE_setgeno(SEXP genofileSEXP, SEXP subSampleInGenoSEXP, SEXP memoryChunkSEXP, SEXP isDiagofKinSetAsOneSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type genofile(genofileSEXP);
    Rcpp::traits::input_parameter< std::vector<int>& >::type subSampleInGeno(subSampleInGenoSEXP);
    Rcpp::traits::input_parameter< float >::type memoryChunk(memoryChunkSEXP);
    Rcpp::traits::input_parameter< bool >::type isDiagofKinSetAsOne(isDiagofKinSetAsOneSEXP);
    rcpp_result_gen = Rcpp::wrap(setgeno(genofile, subSampleInGeno, memoryChunk, isDiagofKinSetAsOne));
    return rcpp_result_gen;
END_RCPP
}
// setgeno_fast
int setgeno_fast(std::string genofile, std::vector<int>& subSampleInGeno, float memoryChunk);
RcppExport SEXP _TAPE_setgeno_fast(SEXP genofileSEXP, SEXP subSampleInGenoSEXP, SEXP memoryChunkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type genofile(genofileSEXP);
    Rcpp::traits::input_parameter< std::vector<int>& >::type subSampleInGeno(subSampleInGenoSEXP);
    Rcpp::traits::input_parameter< float >::type memoryChunk(memoryChunkSEXP);
    rcpp_result_gen = Rcpp::wrap(setgeno_fast(genofile, subSampleInGeno, memoryChunk));
    return rcpp_result_gen;
END_RCPP
}
// closegeno
void closegeno();
RcppExport SEXP _TAPE_closegeno() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    closegeno();
    return R_NilValue;
END_RCPP
}
// setLOCOid
void setLOCOid(int startid_LOCO, int endid_LOCO);
RcppExport SEXP _TAPE_setLOCOid(SEXP startid_LOCOSEXP, SEXP endid_LOCOSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type startid_LOCO(startid_LOCOSEXP);
    Rcpp::traits::input_parameter< int >::type endid_LOCO(endid_LOCOSEXP);
    setLOCOid(startid_LOCO, endid_LOCO);
    return R_NilValue;
END_RCPP
}
// getNnomissingR
int getNnomissingR();
RcppExport SEXP _TAPE_getNnomissingR() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getNnomissingR());
    return rcpp_result_gen;
END_RCPP
}
// getMACR
float getMACR(int m);
RcppExport SEXP _TAPE_getMACR(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(getMACR(m));
    return rcpp_result_gen;
END_RCPP
}
// getMAFR
arma::fvec getMAFR();
RcppExport SEXP _TAPE_getMAFR() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getMAFR());
    return rcpp_result_gen;
END_RCPP
}
// getDiagGRM
arma::fvec getDiagGRM();
RcppExport SEXP _TAPE_getDiagGRM() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getDiagGRM());
    return rcpp_result_gen;
END_RCPP
}
// getDiagGRM_LOCO
arma::fvec getDiagGRM_LOCO();
RcppExport SEXP _TAPE_getDiagGRM_LOCO() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getDiagGRM_LOCO());
    return rcpp_result_gen;
END_RCPP
}
// getDiagOfSigma
arma::fvec getDiagOfSigma(const arma::sp_mat& sparsekin, const arma::fvec& W, arma::fvec& tau);
RcppExport SEXP _TAPE_getDiagOfSigma(SEXP sparsekinSEXP, SEXP WSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(getDiagOfSigma(sparsekin, W, tau));
    return rcpp_result_gen;
END_RCPP
}
// getDiagOfSigma_LOCO
arma::fvec getDiagOfSigma_LOCO(arma::sp_mat& sparsekin, const arma::fvec& W, arma::fvec& tau);
RcppExport SEXP _TAPE_getDiagOfSigma_LOCO(SEXP sparsekinSEXP, SEXP WSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(getDiagOfSigma_LOCO(sparsekin, W, tau));
    return rcpp_result_gen;
END_RCPP
}
// getDiagOfSigma_nok
arma::fvec getDiagOfSigma_nok(const arma::fvec& W, arma::fvec& tau);
RcppExport SEXP _TAPE_getDiagOfSigma_nok(SEXP WSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(getDiagOfSigma_nok(W, tau));
    return rcpp_result_gen;
END_RCPP
}
// getMeanDiagOfGRM
float getMeanDiagOfGRM();
RcppExport SEXP _TAPE_getMeanDiagOfGRM() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getMeanDiagOfGRM());
    return rcpp_result_gen;
END_RCPP
}
// parallelCrossProdGRM
arma::fvec parallelCrossProdGRM(arma::fcolvec& bVec);
RcppExport SEXP _TAPE_parallelCrossProdGRM(SEXP bVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fcolvec& >::type bVec(bVecSEXP);
    rcpp_result_gen = Rcpp::wrap(parallelCrossProdGRM(bVec));
    return rcpp_result_gen;
END_RCPP
}
// parallelCrossProdGRM_LOCO
arma::fvec parallelCrossProdGRM_LOCO(arma::fcolvec& bVec);
RcppExport SEXP _TAPE_parallelCrossProdGRM_LOCO(SEXP bVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fcolvec& >::type bVec(bVecSEXP);
    rcpp_result_gen = Rcpp::wrap(parallelCrossProdGRM_LOCO(bVec));
    return rcpp_result_gen;
END_RCPP
}
// getCrossprodGRM
arma::fvec getCrossprodGRM(arma::fcolvec& bVec);
RcppExport SEXP _TAPE_getCrossprodGRM(SEXP bVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fcolvec& >::type bVec(bVecSEXP);
    rcpp_result_gen = Rcpp::wrap(getCrossprodGRM(bVec));
    return rcpp_result_gen;
END_RCPP
}
// getCrossprodGRM_LOCO
arma::fvec getCrossprodGRM_LOCO(arma::fcolvec& bVec);
RcppExport SEXP _TAPE_getCrossprodGRM_LOCO(SEXP bVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fcolvec& >::type bVec(bVecSEXP);
    rcpp_result_gen = Rcpp::wrap(getCrossprodGRM_LOCO(bVec));
    return rcpp_result_gen;
END_RCPP
}
// getCrossprodSig
arma::fcolvec getCrossprodSig(arma::fcolvec& bVec, const arma::sp_mat& sparsekin, const arma::fvec& W, arma::fvec& tau);
RcppExport SEXP _TAPE_getCrossprodSig(SEXP bVecSEXP, SEXP sparsekinSEXP, SEXP WSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fcolvec& >::type bVec(bVecSEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(getCrossprodSig(bVec, sparsekin, W, tau));
    return rcpp_result_gen;
END_RCPP
}
// getCrossprodSig_LOCO
arma::fcolvec getCrossprodSig_LOCO(arma::fcolvec& bVec, arma::sp_mat& sparsekin, const arma::fvec& W, arma::fvec& tau);
RcppExport SEXP _TAPE_getCrossprodSig_LOCO(SEXP bVecSEXP, SEXP sparsekinSEXP, SEXP WSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fcolvec& >::type bVec(bVecSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(getCrossprodSig_LOCO(bVec, sparsekin, W, tau));
    return rcpp_result_gen;
END_RCPP
}
// getCrossprodSig_nok
arma::fcolvec getCrossprodSig_nok(arma::fcolvec& bVec, const arma::fvec& W, arma::fvec& tau);
RcppExport SEXP _TAPE_getCrossprodSig_nok(SEXP bVecSEXP, SEXP WSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fcolvec& >::type bVec(bVecSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(getCrossprodSig_nok(bVec, W, tau));
    return rcpp_result_gen;
END_RCPP
}
// pcgsolve_plink
arma::fvec pcgsolve_plink(const arma::sp_mat& sparsekin, const arma::fvec& W, arma::fvec& tau, arma::fvec& b, std::string preconditioner, float tol, int maxIter);
RcppExport SEXP _TAPE_pcgsolve_plink(SEXP sparsekinSEXP, SEXP WSEXP, SEXP tauSEXP, SEXP bSEXP, SEXP preconditionerSEXP, SEXP tolSEXP, SEXP maxIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< std::string >::type preconditioner(preconditionerSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    rcpp_result_gen = Rcpp::wrap(pcgsolve_plink(sparsekin, W, tau, b, preconditioner, tol, maxIter));
    return rcpp_result_gen;
END_RCPP
}
// pcgsolve_plink_LOCO
arma::fvec pcgsolve_plink_LOCO(arma::sp_mat& sparsekin, const arma::fvec& W, arma::fvec& tau, arma::fvec& b, std::string preconditioner, float tol, int maxIter);
RcppExport SEXP _TAPE_pcgsolve_plink_LOCO(SEXP sparsekinSEXP, SEXP WSEXP, SEXP tauSEXP, SEXP bSEXP, SEXP preconditionerSEXP, SEXP tolSEXP, SEXP maxIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< std::string >::type preconditioner(preconditionerSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    rcpp_result_gen = Rcpp::wrap(pcgsolve_plink_LOCO(sparsekin, W, tau, b, preconditioner, tol, maxIter));
    return rcpp_result_gen;
END_RCPP
}
// pcgsolve_plink_nok
arma::fvec pcgsolve_plink_nok(const arma::fvec& W, arma::fvec& tau, arma::fvec& b, std::string preconditioner, float tol, int maxIter);
RcppExport SEXP _TAPE_pcgsolve_plink_nok(SEXP WSEXP, SEXP tauSEXP, SEXP bSEXP, SEXP preconditionerSEXP, SEXP tolSEXP, SEXP maxIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< std::string >::type preconditioner(preconditionerSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    rcpp_result_gen = Rcpp::wrap(pcgsolve_plink_nok(W, tau, b, preconditioner, tol, maxIter));
    return rcpp_result_gen;
END_RCPP
}
// pcgsolveMat_plink
arma::fmat pcgsolveMat_plink(arma::sp_mat& sparsekin, const arma::fvec& W, arma::fvec& tau, arma::fmat& bMat, std::string preconditioner, float tol, int maxIter);
RcppExport SEXP _TAPE_pcgsolveMat_plink(SEXP sparsekinSEXP, SEXP WSEXP, SEXP tauSEXP, SEXP bMatSEXP, SEXP preconditionerSEXP, SEXP tolSEXP, SEXP maxIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type bMat(bMatSEXP);
    Rcpp::traits::input_parameter< std::string >::type preconditioner(preconditionerSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    rcpp_result_gen = Rcpp::wrap(pcgsolveMat_plink(sparsekin, W, tau, bMat, preconditioner, tol, maxIter));
    return rcpp_result_gen;
END_RCPP
}
// pcgsolveMat_plink_nok
arma::fmat pcgsolveMat_plink_nok(const arma::fvec& W, arma::fvec& tau, arma::fmat& bMat, std::string preconditioner, float tol, int maxIter);
RcppExport SEXP _TAPE_pcgsolveMat_plink_nok(SEXP WSEXP, SEXP tauSEXP, SEXP bMatSEXP, SEXP preconditionerSEXP, SEXP tolSEXP, SEXP maxIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type bMat(bMatSEXP);
    Rcpp::traits::input_parameter< std::string >::type preconditioner(preconditionerSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    rcpp_result_gen = Rcpp::wrap(pcgsolveMat_plink_nok(W, tau, bMat, preconditioner, tol, maxIter));
    return rcpp_result_gen;
END_RCPP
}
// pcgsolveMat_plink_LOCO
arma::fmat pcgsolveMat_plink_LOCO(arma::sp_mat& sparsekin, const arma::fvec& W, arma::fvec& tau, arma::fmat& bMat, std::string preconditioner, float tol, int maxIter);
RcppExport SEXP _TAPE_pcgsolveMat_plink_LOCO(SEXP sparsekinSEXP, SEXP WSEXP, SEXP tauSEXP, SEXP bMatSEXP, SEXP preconditionerSEXP, SEXP tolSEXP, SEXP maxIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type bMat(bMatSEXP);
    Rcpp::traits::input_parameter< std::string >::type preconditioner(preconditionerSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    rcpp_result_gen = Rcpp::wrap(pcgsolveMat_plink_LOCO(sparsekin, W, tau, bMat, preconditioner, tol, maxIter));
    return rcpp_result_gen;
END_RCPP
}
// getTrace_plink
arma::fvec getTrace_plink(int n_nomissing, int q, arma::sp_mat& sparsekin, const arma::fvec& W, arma::fvec tau, arma::fmat& Sigma_iX, arma::fmat& XSiX_inv, int nrun_trace, int maxiter_pcg, float tol_pcg, float cutoff_trace);
RcppExport SEXP _TAPE_getTrace_plink(SEXP n_nomissingSEXP, SEXP qSEXP, SEXP sparsekinSEXP, SEXP WSEXP, SEXP tauSEXP, SEXP Sigma_iXSEXP, SEXP XSiX_invSEXP, SEXP nrun_traceSEXP, SEXP maxiter_pcgSEXP, SEXP tol_pcgSEXP, SEXP cutoff_traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_nomissing(n_nomissingSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Sigma_iX(Sigma_iXSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type XSiX_inv(XSiX_invSEXP);
    Rcpp::traits::input_parameter< int >::type nrun_trace(nrun_traceSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter_pcg(maxiter_pcgSEXP);
    Rcpp::traits::input_parameter< float >::type tol_pcg(tol_pcgSEXP);
    Rcpp::traits::input_parameter< float >::type cutoff_trace(cutoff_traceSEXP);
    rcpp_result_gen = Rcpp::wrap(getTrace_plink(n_nomissing, q, sparsekin, W, tau, Sigma_iX, XSiX_inv, nrun_trace, maxiter_pcg, tol_pcg, cutoff_trace));
    return rcpp_result_gen;
END_RCPP
}
// getTrace_plink_nok
arma::fvec getTrace_plink_nok(int n_nomissing, int q, const arma::fvec& W, arma::fvec tau, arma::fmat& Sigma_iX, arma::fmat& XSiX_inv, int nrun_trace, int maxiter_pcg, float tol_pcg, float cutoff_trace);
RcppExport SEXP _TAPE_getTrace_plink_nok(SEXP n_nomissingSEXP, SEXP qSEXP, SEXP WSEXP, SEXP tauSEXP, SEXP Sigma_iXSEXP, SEXP XSiX_invSEXP, SEXP nrun_traceSEXP, SEXP maxiter_pcgSEXP, SEXP tol_pcgSEXP, SEXP cutoff_traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_nomissing(n_nomissingSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Sigma_iX(Sigma_iXSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type XSiX_inv(XSiX_invSEXP);
    Rcpp::traits::input_parameter< int >::type nrun_trace(nrun_traceSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter_pcg(maxiter_pcgSEXP);
    Rcpp::traits::input_parameter< float >::type tol_pcg(tol_pcgSEXP);
    Rcpp::traits::input_parameter< float >::type cutoff_trace(cutoff_traceSEXP);
    rcpp_result_gen = Rcpp::wrap(getTrace_plink_nok(n_nomissing, q, W, tau, Sigma_iX, XSiX_inv, nrun_trace, maxiter_pcg, tol_pcg, cutoff_trace));
    return rcpp_result_gen;
END_RCPP
}
// getScore_plink
List getScore_plink(int n_nomissing, int q, arma::fvec& Y, arma::fmat& X, arma::sp_mat& sparsekin, const arma::fvec& W, arma::fvec tau, arma::fvec fixtau, bool is_AI, float tol_pcg, int maxiter_pcg, int nrun_trace, float cutoff_trace);
RcppExport SEXP _TAPE_getScore_plink(SEXP n_nomissingSEXP, SEXP qSEXP, SEXP YSEXP, SEXP XSEXP, SEXP sparsekinSEXP, SEXP WSEXP, SEXP tauSEXP, SEXP fixtauSEXP, SEXP is_AISEXP, SEXP tol_pcgSEXP, SEXP maxiter_pcgSEXP, SEXP nrun_traceSEXP, SEXP cutoff_traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_nomissing(n_nomissingSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type fixtau(fixtauSEXP);
    Rcpp::traits::input_parameter< bool >::type is_AI(is_AISEXP);
    Rcpp::traits::input_parameter< float >::type tol_pcg(tol_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter_pcg(maxiter_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type nrun_trace(nrun_traceSEXP);
    Rcpp::traits::input_parameter< float >::type cutoff_trace(cutoff_traceSEXP);
    rcpp_result_gen = Rcpp::wrap(getScore_plink(n_nomissing, q, Y, X, sparsekin, W, tau, fixtau, is_AI, tol_pcg, maxiter_pcg, nrun_trace, cutoff_trace));
    return rcpp_result_gen;
END_RCPP
}
// getScore_plink_nok
List getScore_plink_nok(int n_nomissing, int q, arma::fvec& Y, arma::fmat& X, const arma::fvec& W, arma::fvec tau, arma::fvec fixtau, bool is_AI, float tol_pcg, int maxiter_pcg, int nrun_trace, float cutoff_trace);
RcppExport SEXP _TAPE_getScore_plink_nok(SEXP n_nomissingSEXP, SEXP qSEXP, SEXP YSEXP, SEXP XSEXP, SEXP WSEXP, SEXP tauSEXP, SEXP fixtauSEXP, SEXP is_AISEXP, SEXP tol_pcgSEXP, SEXP maxiter_pcgSEXP, SEXP nrun_traceSEXP, SEXP cutoff_traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_nomissing(n_nomissingSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type fixtau(fixtauSEXP);
    Rcpp::traits::input_parameter< bool >::type is_AI(is_AISEXP);
    Rcpp::traits::input_parameter< float >::type tol_pcg(tol_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter_pcg(maxiter_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type nrun_trace(nrun_traceSEXP);
    Rcpp::traits::input_parameter< float >::type cutoff_trace(cutoff_traceSEXP);
    rcpp_result_gen = Rcpp::wrap(getScore_plink_nok(n_nomissing, q, Y, X, W, tau, fixtau, is_AI, tol_pcg, maxiter_pcg, nrun_trace, cutoff_trace));
    return rcpp_result_gen;
END_RCPP
}
// getScore_plink_LOCO
List getScore_plink_LOCO(int n_nomissing, int q, arma::fvec& Y, arma::fmat& X, arma::sp_mat& sparsekin, const arma::fvec& W, arma::fvec tau, arma::fvec fixtau, bool is_AI, float tol_pcg, int maxiter_pcg, int nrun_trace, float cutoff_trace);
RcppExport SEXP _TAPE_getScore_plink_LOCO(SEXP n_nomissingSEXP, SEXP qSEXP, SEXP YSEXP, SEXP XSEXP, SEXP sparsekinSEXP, SEXP WSEXP, SEXP tauSEXP, SEXP fixtauSEXP, SEXP is_AISEXP, SEXP tol_pcgSEXP, SEXP maxiter_pcgSEXP, SEXP nrun_traceSEXP, SEXP cutoff_traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_nomissing(n_nomissingSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat& >::type sparsekin(sparsekinSEXP);
    Rcpp::traits::input_parameter< const arma::fvec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type fixtau(fixtauSEXP);
    Rcpp::traits::input_parameter< bool >::type is_AI(is_AISEXP);
    Rcpp::traits::input_parameter< float >::type tol_pcg(tol_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter_pcg(maxiter_pcgSEXP);
    Rcpp::traits::input_parameter< int >::type nrun_trace(nrun_traceSEXP);
    Rcpp::traits::input_parameter< float >::type cutoff_trace(cutoff_traceSEXP);
    rcpp_result_gen = Rcpp::wrap(getScore_plink_LOCO(n_nomissing, q, Y, X, sparsekin, W, tau, fixtau, is_AI, tol_pcg, maxiter_pcg, nrun_trace, cutoff_trace));
    return rcpp_result_gen;
END_RCPP
}
// getOneSNPR
arma::fvec getOneSNPR(int i);
RcppExport SEXP _TAPE_getOneSNPR(SEXP iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    rcpp_result_gen = Rcpp::wrap(getOneSNPR(i));
    return rcpp_result_gen;
END_RCPP
}
// getOneSNPR_nostd
arma::fvec getOneSNPR_nostd(int i);
RcppExport SEXP _TAPE_getOneSNPR_nostd(SEXP iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    rcpp_result_gen = Rcpp::wrap(getOneSNPR_nostd(i));
    return rcpp_result_gen;
END_RCPP
}
// icc
arma::fmat icc(arma::fmat A);
RcppExport SEXP _TAPE_icc(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fmat >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(icc(A));
    return rcpp_result_gen;
END_RCPP
}
// pcgsolve
arma::fvec pcgsolve(arma::fmat& A, arma::fvec& b, std::string preconditioner, float tol, int maxIter);
RcppExport SEXP _TAPE_pcgsolve(SEXP ASEXP, SEXP bSEXP, SEXP preconditionerSEXP, SEXP tolSEXP, SEXP maxIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fmat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< std::string >::type preconditioner(preconditionerSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    rcpp_result_gen = Rcpp::wrap(pcgsolve(A, b, preconditioner, tol, maxIter));
    return rcpp_result_gen;
END_RCPP
}
// readMat
arma::fmat readMat(const std::string& filename, const std::string& delimeter);
RcppExport SEXP _TAPE_readMat(SEXP filenameSEXP, SEXP delimeterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type delimeter(delimeterSEXP);
    rcpp_result_gen = Rcpp::wrap(readMat(filename, delimeter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TAPE_getScore", (DL_FUNC) &_TAPE_getScore, 14},
    {"_TAPE_getTau", (DL_FUNC) &_TAPE_getTau, 18},
    {"_TAPE_getTau_plink", (DL_FUNC) &_TAPE_getTau_plink, 21},
    {"_TAPE_getTau_plink_nok", (DL_FUNC) &_TAPE_getTau_plink_nok, 17},
    {"_TAPE_getTrace", (DL_FUNC) &_TAPE_getTrace, 13},
    {"_TAPE_glmmaiUpdate", (DL_FUNC) &_TAPE_glmmaiUpdate, 14},
    {"_TAPE_glmmaiUpdate_plink", (DL_FUNC) &_TAPE_glmmaiUpdate_plink, 13},
    {"_TAPE_glmmaiUpdate_plink_nok", (DL_FUNC) &_TAPE_glmmaiUpdate_plink_nok, 12},
    {"_TAPE_glmmaiUpdate_plink_LOCO", (DL_FUNC) &_TAPE_glmmaiUpdate_plink_LOCO, 13},
    {"_TAPE_setgeno", (DL_FUNC) &_TAPE_setgeno, 4},
    {"_TAPE_setgeno_fast", (DL_FUNC) &_TAPE_setgeno_fast, 3},
    {"_TAPE_closegeno", (DL_FUNC) &_TAPE_closegeno, 0},
    {"_TAPE_setLOCOid", (DL_FUNC) &_TAPE_setLOCOid, 2},
    {"_TAPE_getNnomissingR", (DL_FUNC) &_TAPE_getNnomissingR, 0},
    {"_TAPE_getMACR", (DL_FUNC) &_TAPE_getMACR, 1},
    {"_TAPE_getMAFR", (DL_FUNC) &_TAPE_getMAFR, 0},
    {"_TAPE_getDiagGRM", (DL_FUNC) &_TAPE_getDiagGRM, 0},
    {"_TAPE_getDiagGRM_LOCO", (DL_FUNC) &_TAPE_getDiagGRM_LOCO, 0},
    {"_TAPE_getDiagOfSigma", (DL_FUNC) &_TAPE_getDiagOfSigma, 3},
    {"_TAPE_getDiagOfSigma_LOCO", (DL_FUNC) &_TAPE_getDiagOfSigma_LOCO, 3},
    {"_TAPE_getDiagOfSigma_nok", (DL_FUNC) &_TAPE_getDiagOfSigma_nok, 2},
    {"_TAPE_getMeanDiagOfGRM", (DL_FUNC) &_TAPE_getMeanDiagOfGRM, 0},
    {"_TAPE_parallelCrossProdGRM", (DL_FUNC) &_TAPE_parallelCrossProdGRM, 1},
    {"_TAPE_parallelCrossProdGRM_LOCO", (DL_FUNC) &_TAPE_parallelCrossProdGRM_LOCO, 1},
    {"_TAPE_getCrossprodGRM", (DL_FUNC) &_TAPE_getCrossprodGRM, 1},
    {"_TAPE_getCrossprodGRM_LOCO", (DL_FUNC) &_TAPE_getCrossprodGRM_LOCO, 1},
    {"_TAPE_getCrossprodSig", (DL_FUNC) &_TAPE_getCrossprodSig, 4},
    {"_TAPE_getCrossprodSig_LOCO", (DL_FUNC) &_TAPE_getCrossprodSig_LOCO, 4},
    {"_TAPE_getCrossprodSig_nok", (DL_FUNC) &_TAPE_getCrossprodSig_nok, 3},
    {"_TAPE_pcgsolve_plink", (DL_FUNC) &_TAPE_pcgsolve_plink, 7},
    {"_TAPE_pcgsolve_plink_LOCO", (DL_FUNC) &_TAPE_pcgsolve_plink_LOCO, 7},
    {"_TAPE_pcgsolve_plink_nok", (DL_FUNC) &_TAPE_pcgsolve_plink_nok, 6},
    {"_TAPE_pcgsolveMat_plink", (DL_FUNC) &_TAPE_pcgsolveMat_plink, 7},
    {"_TAPE_pcgsolveMat_plink_nok", (DL_FUNC) &_TAPE_pcgsolveMat_plink_nok, 6},
    {"_TAPE_pcgsolveMat_plink_LOCO", (DL_FUNC) &_TAPE_pcgsolveMat_plink_LOCO, 7},
    {"_TAPE_getTrace_plink", (DL_FUNC) &_TAPE_getTrace_plink, 11},
    {"_TAPE_getTrace_plink_nok", (DL_FUNC) &_TAPE_getTrace_plink_nok, 10},
    {"_TAPE_getScore_plink", (DL_FUNC) &_TAPE_getScore_plink, 13},
    {"_TAPE_getScore_plink_nok", (DL_FUNC) &_TAPE_getScore_plink_nok, 12},
    {"_TAPE_getScore_plink_LOCO", (DL_FUNC) &_TAPE_getScore_plink_LOCO, 13},
    {"_TAPE_getOneSNPR", (DL_FUNC) &_TAPE_getOneSNPR, 1},
    {"_TAPE_getOneSNPR_nostd", (DL_FUNC) &_TAPE_getOneSNPR_nostd, 1},
    {"_TAPE_icc", (DL_FUNC) &_TAPE_icc, 1},
    {"_TAPE_pcgsolve", (DL_FUNC) &_TAPE_pcgsolve, 5},
    {"_TAPE_readMat", (DL_FUNC) &_TAPE_readMat, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_TAPE(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
